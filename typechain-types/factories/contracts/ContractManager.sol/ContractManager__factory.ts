/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../../contracts/ContractManager.sol/ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "RequestFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestCompelted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ContractManagerAccess.accessStruct",
        name: "_access",
        type: "tuple",
      },
    ],
    name: "accessUpdatedEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "adminEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "batchCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAdminAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getAdminContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_functionId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_userWallet",
        type: "address",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_mode",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        internalType: "struct ContractManagerAccess.accessStruct[]",
        name: "_newAccess",
        type: "tuple[]",
      },
    ],
    name: "updateAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b508061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80635e848f3a1161008c57806395648f1b1161006657806395648f1b146101ff578063c3a2a93a1461021d578063f2fde38b1461023b578063fc6837a114610257576100ce565b80635e848f3a146101bb578063715018a6146101d75780638da5cb5b146101e1576100ce565b8062ce8e3e146100d357806327369718146100f15780633341693c1461012157806337267bc3146101515780634138624a1461016f5780634b0bddd21461019f575b600080fd5b6100db610273565b6040516100e89190611084565b60405180910390f35b61010b600480360381019061010691906110e6565b610284565b604051610118919061112e565b60405180910390f35b61013b600480360381019061013691906111a1565b6102a1565b604051610148919061112e565b60405180910390f35b6101596103c1565b604051610166919061120d565b60405180910390f35b61018960048036038101906101849190611254565b6103d2565b6040516101969190611290565b60405180910390f35b6101b960048036038101906101b491906112d7565b6103ef565b005b6101d560048036038101906101d0919061137c565b61046a565b005b6101df6108f2565b005b6101e9610906565b6040516101f69190611290565b60405180910390f35b61020761092f565b6040516102149190611491565b60405180910390f35b610225610940565b6040516102329190611084565b60405180910390f35b610255600480360381019061025091906110e6565b610951565b005b610271600480360381019061026c91906115f4565b6109d4565b005b606061027f6005610ad1565b905090565b600061029a826001610af290919063ffffffff16565b9050919050565b600063f2fde38b60e01b837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102fc575063715018a660e01b837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561030a57600090506103ba565b6103b7837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610b2290919063ffffffff16565b90505b9392505050565b60006103cd6001610b39565b905090565b60006103e8826001610b4e90919063ffffffff16565b9050919050565b6103f7610b68565b801561041757610411826001610be690919063ffffffff16565b5061042d565b61042b826001610c1690919063ffffffff16565b505b7f6bee1852ac1880c9a13b899eee6eeb36023bb3b07c24dee47daff561c65a85ef828260405161045e92919061163d565b60405180910390a15050565b610472610906565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104b057506104af33610284565b5b6104ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e6906116c3565b60405180910390fd5b60005b828290508160ff1610156108ed5782828260ff16818110610516576105156116e3565b5b905060800201606001602081019061052e9190611712565b156107525761057483838360ff1681811061054c5761054b6116e3565b5b905060800201600001602081019061056491906110e6565b6003610be690919063ffffffff16565b506105b683838360ff1681811061058e5761058d6116e3565b5b90506080020160400160208101906105a691906110e6565b6005610be690919063ffffffff16565b5061061783838360ff168181106105d0576105cf6116e3565b5b90506080020160200160208101906105e8919061173f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166007610c4690919063ffffffff16565b5061074c83838360ff16818110610631576106306116e3565b5b9050608002016020016020810190610649919061173f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166009600086868660ff16818110610682576106816116e3565b5b905060800201600001602081019061069a91906110e6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086868660ff168181106106ec576106eb6116e3565b5b905060800201604001602081019061070491906110e6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610c4690919063ffffffff16565b50610888565b61088683838360ff1681811061076b5761076a6116e3565b5b9050608002016020016020810190610783919061173f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166009600086868660ff168181106107bc576107bb6116e3565b5b90506080020160000160208101906107d491906110e6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086868660ff16818110610826576108256116e3565b5b905060800201604001602081019061083e91906110e6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610c5d90919063ffffffff16565b505b7f991989dc2dea5933f06c7bbc85252ed30a279fc6a82e6259a9c52aedbbe0de8f83838360ff168181106108bf576108be6116e3565b5b9050608002016040516108d29190611844565b60405180910390a180806108e59061189b565b9150506104f2565b505050565b6108fa610b68565b6109046000610c74565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061093b6007610d38565b905090565b606061094c6003610ad1565b905090565b610959610b68565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90611936565b60405180910390fd5b6109d181610c74565b50565b600080602083019050805160f01c91506002810190505960405260005b8261ffff168160ff161015610acb57600080835160f01c915060028401935083519050602084019350600060405160008185886000875af1915083860195505080610a7357836040517f7a2da17d000000000000000000000000000000000000000000000000000000008152600401610a6a919061199f565b60405180910390fd5b86604051610a819190611a34565b60405180910390207f957ca92aff3a71c8f449700d17d33d67e1587539864b289480233a9b2b79645f60405160405180910390a25050508080610ac39061189b565b9150506109f1565b50505050565b60606000610ae183600001610d4d565b905060608190508092505050919050565b6000610b1a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610da9565b905092915050565b6000610b318360000183610da9565b905092915050565b6000610b4782600001610dcc565b9050919050565b6000610b5d8360000183610ddd565b60001c905092915050565b610b70610e08565b73ffffffffffffffffffffffffffffffffffffffff16610b8e610906565b73ffffffffffffffffffffffffffffffffffffffff1614610be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdb90611a97565b60405180910390fd5b565b6000610c0e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610e10565b905092915050565b6000610c3e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610e80565b905092915050565b6000610c558360000183610e10565b905092915050565b6000610c6c8360000183610e80565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6060610d4682600001610d4d565b9050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610d9d57602002820191906000526020600020905b815481526020019060010190808311610d89575b50505050509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000826000018281548110610df557610df46116e3565b5b9060005260206000200154905092915050565b600033905090565b6000610e1c8383610da9565b610e75578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610e7a565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114610f88576000600182610eb29190611ab7565b9050600060018660000180549050610eca9190611ab7565b9050818114610f39576000866000018281548110610eeb57610eea6116e3565b5b9060005260206000200154905080876000018481548110610f0f57610f0e6116e3565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610f4d57610f4c611aeb565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610f8e565b60009150505b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610feb82610fc0565b9050919050565b610ffb81610fe0565b82525050565b600061100d8383610ff2565b60208301905092915050565b6000602082019050919050565b600061103182610f94565b61103b8185610f9f565b935061104683610fb0565b8060005b8381101561107757815161105e8882611001565b975061106983611019565b92505060018101905061104a565b5085935050505092915050565b6000602082019050818103600083015261109e8184611026565b905092915050565b6000604051905090565b600080fd5b600080fd5b6110c381610fe0565b81146110ce57600080fd5b50565b6000813590506110e0816110ba565b92915050565b6000602082840312156110fc576110fb6110b0565b5b600061110a848285016110d1565b91505092915050565b60008115159050919050565b61112881611113565b82525050565b6000602082019050611143600083018461111f565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61117e81611149565b811461118957600080fd5b50565b60008135905061119b81611175565b92915050565b6000806000606084860312156111ba576111b96110b0565b5b60006111c8868287016110d1565b93505060206111d98682870161118c565b92505060406111ea868287016110d1565b9150509250925092565b6000819050919050565b611207816111f4565b82525050565b600060208201905061122260008301846111fe565b92915050565b611231816111f4565b811461123c57600080fd5b50565b60008135905061124e81611228565b92915050565b60006020828403121561126a576112696110b0565b5b60006112788482850161123f565b91505092915050565b61128a81610fe0565b82525050565b60006020820190506112a56000830184611281565b92915050565b6112b481611113565b81146112bf57600080fd5b50565b6000813590506112d1816112ab565b92915050565b600080604083850312156112ee576112ed6110b0565b5b60006112fc858286016110d1565b925050602061130d858286016112c2565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261133c5761133b611317565b5b8235905067ffffffffffffffff8111156113595761135861131c565b5b60208301915083608082028301111561137557611374611321565b5b9250929050565b60008060208385031215611393576113926110b0565b5b600083013567ffffffffffffffff8111156113b1576113b06110b5565b5b6113bd85828601611326565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611408816113f5565b82525050565b600061141a83836113ff565b60208301905092915050565b6000602082019050919050565b600061143e826113c9565b61144881856113d4565b9350611453836113e5565b8060005b8381101561148457815161146b888261140e565b975061147683611426565b925050600181019050611457565b5085935050505092915050565b600060208201905081810360008301526114ab8184611433565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611501826114b8565b810181811067ffffffffffffffff821117156115205761151f6114c9565b5b80604052505050565b60006115336110a6565b905061153f82826114f8565b919050565b600067ffffffffffffffff82111561155f5761155e6114c9565b5b611568826114b8565b9050602081019050919050565b82818337600083830152505050565b600061159761159284611544565b611529565b9050828152602081018484840111156115b3576115b26114b3565b5b6115be848285611575565b509392505050565b600082601f8301126115db576115da611317565b5b81356115eb848260208601611584565b91505092915050565b60006020828403121561160a576116096110b0565b5b600082013567ffffffffffffffff811115611628576116276110b5565b5b611634848285016115c6565b91505092915050565b60006040820190506116526000830185611281565b61165f602083018461111f565b9392505050565b600082825260208201905092915050565b7f4e6f7420417574686f7269736564000000000000000000000000000000000000600082015250565b60006116ad600e83611666565b91506116b882611677565b602082019050919050565b600060208201905081810360008301526116dc816116a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611728576117276110b0565b5b6000611736848285016112c2565b91505092915050565b600060208284031215611755576117546110b0565b5b60006117638482850161118c565b91505092915050565b600061177b60208401846110d1565b905092915050565b6000611792602084018461118c565b905092915050565b6117a381611149565b82525050565b60006117b860208401846112c2565b905092915050565b6117c981611113565b82525050565b608082016117e0600083018361176c565b6117ed6000850182610ff2565b506117fb6020830183611783565b611808602085018261179a565b50611816604083018361176c565b6118236040850182610ff2565b5061183160608301836117a9565b61183e60608501826117c0565b50505050565b600060808201905061185960008301846117cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b60006118a68261188e565b915060ff82036118b9576118b861185f565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611920602683611666565b915061192b826118c4565b604082019050919050565b6000602082019050818103600083015261194f81611913565b9050919050565b600061ffff82169050919050565b6000819050919050565b600061198961198461197f8461188e565b611964565b611956565b9050919050565b6119998161196e565b82525050565b60006020820190506119b46000830184611990565b92915050565b600081519050919050565b600081905092915050565b60005b838110156119ee5780820151818401526020810190506119d3565b838111156119fd576000848401525b50505050565b6000611a0e826119ba565b611a1881856119c5565b9350611a288185602086016119d0565b80840191505092915050565b6000611a408284611a03565b915081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a81602083611666565b9150611a8c82611a4b565b602082019050919050565b60006020820190508181036000830152611ab081611a74565b9050919050565b6000611ac2826111f4565b9150611acd836111f4565b925082821015611ae057611adf61185f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d947793580ac1db750011258a2277f4bacc26cc6b46f39939b40044839e8f12a64736f6c634300080d0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
