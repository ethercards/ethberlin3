/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../../contracts/ContractManager.sol/ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "RequestFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestCompelted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "batchCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAdress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_fnHash",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_functionCaller",
        type: "address",
      },
    ],
    name: "checkAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61097b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063f2fde38b14610091578063f3b5c85c146100a4578063f8a8fd6d146100c7578063fc6837a1146100cf575b600080fd5b61006f6100e2565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61006f61009f366004610699565b6100f6565b6100b76100b23660046106bb565b610174565b6040519015158152602001610088565b61006f6101a5565b61006f6100dd36600461070d565b6101cb565b6100ea610416565b6100f46000610470565b565b6100fe610416565b6001600160a01b0381166101685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61017181610470565b50565b600061019b6040518060400160405280600481526020016315195cdd60e21b8152506104c0565b5060019392505050565b6100f460405180604001604052806005815260200164576f726b7360d81b8152506104c0565b6040805180820190915260118152700313cba32b9903230ba309039b4bd329d1607d1b60208201526101fd9082610503565b6040805180820190915260078152662827a4a72a22a960c91b60208201526002906102289082610503565b60006102368282858761077f565b61023f916107a9565b60f01c905061024d8161054c565b60005b8161ffff168161ffff1610156103cf5760008584866102708260026107ef565b9261027d9392919061077f565b610286916107a9565b60f01c90506102bb6040518060400160405280600a8152602001690c8c2e8c298cadccee8d60b31b8152508261ffff16610503565b6102c68460026107ef565b935060008685876102d88260146107ef565b926102e59392919061077f565b6102ee91610807565b60601c905061031e60405180604001604052806009815260200168746f4164647265737360b81b81525082610591565b6103298560146107ef565b9450600087868861033b8260046107ef565b926103489392919061077f565b6103519161083a565b905061035c816105d6565b610367828233610174565b506000604051600081868a6000885af19150610389905061ffff8516886107ef565b96506103948161061f565b806103b857604051637a2da17d60e01b815261ffff8616600482015260240161015f565b5050505080806103c790610868565b915050610250565b5083836040516103e0929190610889565b604051908190038120907f957ca92aff3a71c8f449700d17d33d67e1587539864b289480233a9b2b79645f90600090a250505050565b6000546001600160a01b031633146100f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161015f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610171816040516024016104d491906108e6565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261065c565b61054882826040516024016105199291906108f9565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261065c565b5050565b6101718160405160240161056291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b17905261065c565b61054882826040516024016105a792919061091b565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261065c565b6040516001600160e01b0319821660248201526101719060440160408051601f198184030181529190526020810180516001600160e01b031663e05f48d160e01b17905261065c565b60405181151560248201526101719060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461069457600080fd5b919050565b6000602082840312156106ab57600080fd5b6106b48261067d565b9392505050565b6000806000606084860312156106d057600080fd5b6106d98461067d565b925060208401356001600160e01b0319811681146106f657600080fd5b91506107046040850161067d565b90509250925092565b6000806020838503121561072057600080fd5b823567ffffffffffffffff8082111561073857600080fd5b818501915085601f83011261074c57600080fd5b81358181111561075b57600080fd5b86602082850101111561076d57600080fd5b60209290920196919550909350505050565b6000808585111561078f57600080fd5b8386111561079c57600080fd5b5050820193919092039150565b6001600160f01b031981358181169160028510156107d15780818660020360031b1b83161692505b505092915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610802576108026107d9565b500190565b6bffffffffffffffffffffffff1981358181169160148510156107d15760149490940360031b84901b1690921692915050565b6001600160e01b031981358181169160048510156107d15760049490940360031b84901b1690921692915050565b600061ffff80831681810361087f5761087f6107d9565b6001019392505050565b8183823760009101908152919050565b6000815180845260005b818110156108bf576020818501810151868301820152016108a3565b818111156108d1576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006106b46020830184610899565b60408152600061090c6040830185610899565b90508260208301529392505050565b60408152600061092e6040830185610899565b905060018060a01b0383166020830152939250505056fea2646970667358221220c04d6e985fdaa4d8b40dc358bbbaacdbdf5f45aebaf50c461638aa0eff86345564736f6c634300080d0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
