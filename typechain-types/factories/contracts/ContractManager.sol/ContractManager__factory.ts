/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../../contracts/ContractManager.sol/ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "RequestFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestCompelted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "batchCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAdress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_fnHash",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_functionCaller",
        type: "address",
      },
    ],
    name: "checkAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109d88061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063f2fde38b14610084578063f3b5c85c146100a0578063fc6837a1146100d0575b600080fd5b6100646100ec565b005b61006e610100565b60405161007b9190610441565b60405180910390f35b61009e6004803603810190610099919061049c565b610129565b005b6100ba60048036038101906100b59190610521565b6101ac565b6040516100c7919061058f565b60405180910390f35b6100ea60048036038101906100e591906106f0565b6101b9565b005b6100f46102b6565b6100fe6000610334565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101316102b6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610197906107bc565b60405180910390fd5b6101a981610334565b50565b6000600190509392505050565b600080602083019050805160f01c91506002810190505960405260005b8261ffff168160ff1610156102b057600080835160f01c915060028401935083519050602084019350600060405160008185886000875af191508386019550508061025857836040517f7a2da17d00000000000000000000000000000000000000000000000000000000815260040161024f9190610832565b60405180910390fd5b8660405161026691906108c7565b60405180910390207f957ca92aff3a71c8f449700d17d33d67e1587539864b289480233a9b2b79645f60405160405180910390a250505080806102a89061090d565b9150506101d6565b50505050565b6102be6103f8565b73ffffffffffffffffffffffffffffffffffffffff166102dc610100565b73ffffffffffffffffffffffffffffffffffffffff1614610332576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032990610982565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061042b82610400565b9050919050565b61043b81610420565b82525050565b60006020820190506104566000830184610432565b92915050565b6000604051905090565b600080fd5b600080fd5b61047981610420565b811461048457600080fd5b50565b60008135905061049681610470565b92915050565b6000602082840312156104b2576104b1610466565b5b60006104c084828501610487565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6104fe816104c9565b811461050957600080fd5b50565b60008135905061051b816104f5565b92915050565b60008060006060848603121561053a57610539610466565b5b600061054886828701610487565b93505060206105598682870161050c565b925050604061056a86828701610487565b9150509250925092565b60008115159050919050565b61058981610574565b82525050565b60006020820190506105a46000830184610580565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105fd826105b4565b810181811067ffffffffffffffff8211171561061c5761061b6105c5565b5b80604052505050565b600061062f61045c565b905061063b82826105f4565b919050565b600067ffffffffffffffff82111561065b5761065a6105c5565b5b610664826105b4565b9050602081019050919050565b82818337600083830152505050565b600061069361068e84610640565b610625565b9050828152602081018484840111156106af576106ae6105af565b5b6106ba848285610671565b509392505050565b600082601f8301126106d7576106d66105aa565b5b81356106e7848260208601610680565b91505092915050565b60006020828403121561070657610705610466565b5b600082013567ffffffffffffffff8111156107245761072361046b565b5b610730848285016106c2565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107a6602683610739565b91506107b18261074a565b604082019050919050565b600060208201905081810360008301526107d581610799565b9050919050565b600060ff82169050919050565b600061ffff82169050919050565b6000819050919050565b600061081c610817610812846107dc565b6107f7565b6107e9565b9050919050565b61082c81610801565b82525050565b60006020820190506108476000830184610823565b92915050565b600081519050919050565b600081905092915050565b60005b83811015610881578082015181840152602081019050610866565b83811115610890576000848401525b50505050565b60006108a18261084d565b6108ab8185610858565b93506108bb818560208601610863565b80840191505092915050565b60006108d38284610896565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610918826107dc565b915060ff820361092b5761092a6108de565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061096c602083610739565b915061097782610936565b602082019050919050565b6000602082019050818103600083015261099b8161095f565b905091905056fea264697066735822122086c7a6cbf0c6307a923ed229c6143714b6e1a1dfd68bb9f35794d2aaf592f7ae64736f6c634300080d0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
