/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../../contracts/ContractManager.sol/ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "RequestFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestCompelted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ContractManagerAccess.accessStruct",
        name: "_access",
        type: "tuple",
      },
    ],
    name: "accessUpdatedEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "adminEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "batchCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAdminAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getAdminContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_functionId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_userWallet",
        type: "address",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_mode",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        internalType: "struct ContractManagerAccess.accessStruct[]",
        name: "_newAccess",
        type: "tuple[]",
      },
    ],
    name: "updateAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611d388061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80635e848f3a1161008c57806395648f1b1161006657806395648f1b146101ff578063c3a2a93a1461021d578063f2fde38b1461023b578063fc6837a114610257576100ce565b80635e848f3a146101bb578063715018a6146101d75780638da5cb5b146101e1576100ce565b8062ce8e3e146100d357806327369718146100f15780633341693c1461012157806337267bc3146101515780634138624a1461016f5780634b0bddd21461019f575b600080fd5b6100db610273565b6040516100e89190611242565b60405180910390f35b61010b600480360381019061010691906112a4565b610284565b60405161011891906112ec565b60405180910390f35b61013b6004803603810190610136919061135f565b6102a1565b60405161014891906112ec565b60405180910390f35b6101596103c1565b60405161016691906113cb565b60405180910390f35b61018960048036038101906101849190611412565b6103d2565b604051610196919061144e565b60405180910390f35b6101b960048036038101906101b49190611495565b6103ef565b005b6101d560048036038101906101d0919061153a565b61046a565b005b6101df6108f2565b005b6101e9610906565b6040516101f6919061144e565b60405180910390f35b61020761092f565b604051610214919061164f565b60405180910390f35b610225610940565b6040516102329190611242565b60405180910390f35b610255600480360381019061025091906112a4565b610951565b005b610271600480360381019061026c91906117b2565b6109d4565b005b606061027f6005610b34565b905090565b600061029a826001610b5590919063ffffffff16565b9050919050565b600063f2fde38b60e01b837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102fc575063715018a660e01b837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561030a57600090506103ba565b6103b7837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610b8590919063ffffffff16565b90505b9392505050565b60006103cd6001610b9c565b905090565b60006103e8826001610bb190919063ffffffff16565b9050919050565b6103f7610bcb565b801561041757610411826001610c4990919063ffffffff16565b5061042d565b61042b826001610c7990919063ffffffff16565b505b7f6bee1852ac1880c9a13b899eee6eeb36023bb3b07c24dee47daff561c65a85ef828260405161045e9291906117fb565b60405180910390a15050565b610472610906565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104b057506104af33610284565b5b6104ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e690611881565b60405180910390fd5b60005b828290508160ff1610156108ed5782828260ff16818110610516576105156118a1565b5b905060800201606001602081019061052e91906118d0565b156107525761057483838360ff1681811061054c5761054b6118a1565b5b905060800201600001602081019061056491906112a4565b6003610c4990919063ffffffff16565b506105b683838360ff1681811061058e5761058d6118a1565b5b90506080020160400160208101906105a691906112a4565b6005610c4990919063ffffffff16565b5061061783838360ff168181106105d0576105cf6118a1565b5b90506080020160200160208101906105e891906118fd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166007610ca990919063ffffffff16565b5061074c83838360ff16818110610631576106306118a1565b5b905060800201602001602081019061064991906118fd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166009600086868660ff16818110610682576106816118a1565b5b905060800201600001602081019061069a91906112a4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086868660ff168181106106ec576106eb6118a1565b5b905060800201604001602081019061070491906112a4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610ca990919063ffffffff16565b50610888565b61088683838360ff1681811061076b5761076a6118a1565b5b905060800201602001602081019061078391906118fd565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166009600086868660ff168181106107bc576107bb6118a1565b5b90506080020160000160208101906107d491906112a4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086868660ff16818110610826576108256118a1565b5b905060800201604001602081019061083e91906112a4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610cc090919063ffffffff16565b505b7f991989dc2dea5933f06c7bbc85252ed30a279fc6a82e6259a9c52aedbbe0de8f83838360ff168181106108bf576108be6118a1565b5b9050608002016040516108d29190611a02565b60405180910390a180806108e590611a59565b9150506104f2565b505050565b6108fa610bcb565b6109046000610cd7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061093b6007610d9b565b905090565b606061094c6003610b34565b905090565b610959610bcb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90611af4565b60405180910390fd5b6109d181610cd7565b50565b600080602083019050805160f01c91506002810190505960405260005b8261ffff168160ff161015610b2e576000806000845160f01c92506002850194508451915060208501945084519050610a2981610db0565b610a3233610e49565b610a3d8282336102a1565b610a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7390611881565b60405180910390fd5b600060405160008186896000885af1915084870196505080610ad557846040517f7a2da17d000000000000000000000000000000000000000000000000000000008152600401610acc9190611b5d565b60405180910390fd5b87604051610ae39190611bf2565b60405180910390207f957ca92aff3a71c8f449700d17d33d67e1587539864b289480233a9b2b79645f60405160405180910390a2505050508080610b2690611a59565b9150506109f1565b50505050565b60606000610b4483600001610ee2565b905060608190508092505050919050565b6000610b7d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610f3e565b905092915050565b6000610b948360000183610f3e565b905092915050565b6000610baa82600001610f61565b9050919050565b6000610bc08360000183610f72565b60001c905092915050565b610bd3610f9d565b73ffffffffffffffffffffffffffffffffffffffff16610bf1610906565b73ffffffffffffffffffffffffffffffffffffffff1614610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e90611c55565b60405180910390fd5b565b6000610c71836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610fa5565b905092915050565b6000610ca1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611015565b905092915050565b6000610cb88360000183610fa5565b905092915050565b6000610ccf8360000183611015565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6060610da982600001610ee2565b9050919050565b610e4681604051602401610dc49190611c84565b6040516020818303038152906040527fe05f48d1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611129565b50565b610edf81604051602401610e5d919061144e565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611129565b50565b606081600001805480602002602001604051908101604052809291908181526020018280548015610f3257602002820191906000526020600020905b815481526020019060010190808311610f1e575b50505050509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000826000018281548110610f8a57610f896118a1565b5b9060005260206000200154905092915050565b600033905090565b6000610fb18383610f3e565b61100a57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061100f565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461111d5760006001826110479190611c9f565b905060006001866000018054905061105f9190611c9f565b90508181146110ce5760008660000182815481106110805761107f6118a1565b5b90600052602060002001549050808760000184815481106110a4576110a36118a1565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806110e2576110e1611cd3565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611123565b60009150505b92915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111a98261117e565b9050919050565b6111b98161119e565b82525050565b60006111cb83836111b0565b60208301905092915050565b6000602082019050919050565b60006111ef82611152565b6111f9818561115d565b93506112048361116e565b8060005b8381101561123557815161121c88826111bf565b9750611227836111d7565b925050600181019050611208565b5085935050505092915050565b6000602082019050818103600083015261125c81846111e4565b905092915050565b6000604051905090565b600080fd5b600080fd5b6112818161119e565b811461128c57600080fd5b50565b60008135905061129e81611278565b92915050565b6000602082840312156112ba576112b961126e565b5b60006112c88482850161128f565b91505092915050565b60008115159050919050565b6112e6816112d1565b82525050565b600060208201905061130160008301846112dd565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61133c81611307565b811461134757600080fd5b50565b60008135905061135981611333565b92915050565b6000806000606084860312156113785761137761126e565b5b60006113868682870161128f565b93505060206113978682870161134a565b92505060406113a88682870161128f565b9150509250925092565b6000819050919050565b6113c5816113b2565b82525050565b60006020820190506113e060008301846113bc565b92915050565b6113ef816113b2565b81146113fa57600080fd5b50565b60008135905061140c816113e6565b92915050565b6000602082840312156114285761142761126e565b5b6000611436848285016113fd565b91505092915050565b6114488161119e565b82525050565b6000602082019050611463600083018461143f565b92915050565b611472816112d1565b811461147d57600080fd5b50565b60008135905061148f81611469565b92915050565b600080604083850312156114ac576114ab61126e565b5b60006114ba8582860161128f565b92505060206114cb85828601611480565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114fa576114f96114d5565b5b8235905067ffffffffffffffff811115611517576115166114da565b5b602083019150836080820283011115611533576115326114df565b5b9250929050565b600080602083850312156115515761155061126e565b5b600083013567ffffffffffffffff81111561156f5761156e611273565b5b61157b858286016114e4565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6115c6816115b3565b82525050565b60006115d883836115bd565b60208301905092915050565b6000602082019050919050565b60006115fc82611587565b6116068185611592565b9350611611836115a3565b8060005b8381101561164257815161162988826115cc565b9750611634836115e4565b925050600181019050611615565b5085935050505092915050565b6000602082019050818103600083015261166981846115f1565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116bf82611676565b810181811067ffffffffffffffff821117156116de576116dd611687565b5b80604052505050565b60006116f1611264565b90506116fd82826116b6565b919050565b600067ffffffffffffffff82111561171d5761171c611687565b5b61172682611676565b9050602081019050919050565b82818337600083830152505050565b600061175561175084611702565b6116e7565b90508281526020810184848401111561177157611770611671565b5b61177c848285611733565b509392505050565b600082601f830112611799576117986114d5565b5b81356117a9848260208601611742565b91505092915050565b6000602082840312156117c8576117c761126e565b5b600082013567ffffffffffffffff8111156117e6576117e5611273565b5b6117f284828501611784565b91505092915050565b6000604082019050611810600083018561143f565b61181d60208301846112dd565b9392505050565b600082825260208201905092915050565b7f4e6f7420417574686f7269736564000000000000000000000000000000000000600082015250565b600061186b600e83611824565b915061187682611835565b602082019050919050565b6000602082019050818103600083015261189a8161185e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156118e6576118e561126e565b5b60006118f484828501611480565b91505092915050565b6000602082840312156119135761191261126e565b5b60006119218482850161134a565b91505092915050565b6000611939602084018461128f565b905092915050565b6000611950602084018461134a565b905092915050565b61196181611307565b82525050565b60006119766020840184611480565b905092915050565b611987816112d1565b82525050565b6080820161199e600083018361192a565b6119ab60008501826111b0565b506119b96020830183611941565b6119c66020850182611958565b506119d4604083018361192a565b6119e160408501826111b0565b506119ef6060830183611967565b6119fc606085018261197e565b50505050565b6000608082019050611a17600083018461198d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b6000611a6482611a4c565b915060ff8203611a7757611a76611a1d565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ade602683611824565b9150611ae982611a82565b604082019050919050565b60006020820190508181036000830152611b0d81611ad1565b9050919050565b600061ffff82169050919050565b6000819050919050565b6000611b47611b42611b3d84611a4c565b611b22565b611b14565b9050919050565b611b5781611b2c565b82525050565b6000602082019050611b726000830184611b4e565b92915050565b600081519050919050565b600081905092915050565b60005b83811015611bac578082015181840152602081019050611b91565b83811115611bbb576000848401525b50505050565b6000611bcc82611b78565b611bd68185611b83565b9350611be6818560208601611b8e565b80840191505092915050565b6000611bfe8284611bc1565b915081905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c3f602083611824565b9150611c4a82611c09565b602082019050919050565b60006020820190508181036000830152611c6e81611c32565b9050919050565b611c7e81611307565b82525050565b6000602082019050611c996000830184611c75565b92915050565b6000611caa826113b2565b9150611cb5836113b2565b925082821015611cc857611cc7611a1d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d0e1a68f288b4f9494b222e820dfabb0bf684262328218a820975611d92370aa64736f6c634300080d0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
