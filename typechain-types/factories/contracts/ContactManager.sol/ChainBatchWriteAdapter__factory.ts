/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChainBatchWriteAdapter,
  ChainBatchWriteAdapterInterface,
} from "../../../contracts/ContactManager.sol/ChainBatchWriteAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "RequestFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestCompelted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "batchCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAdress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_fnHash",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_functionCaller",
        type: "address",
      },
    ],
    name: "checkAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106168061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063f2fde38b14610086578063f3b5c85c14610099578063fc6837a1146100c0575b600080fd5b6100646100d3565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100646100943660046103f4565b6100e7565b6100b06100a7366004610418565b60019392505050565b604051901515815260200161007d565b6100646100ce366004610470565b610165565b6100db610335565b6100e5600061038f565b565b6100ef610335565b6001600160a01b0381166101595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101628161038f565b50565b60026000610175828285876104e2565b810190610182919061050c565b905060005b8160ff168160ff1610156102ee5760008584866101a5826002610545565b926101b2939291906104e2565b8101906101bf919061055d565b90506101cc846002610545565b935060008685876101de826014610545565b926101eb939291906104e2565b8101906101f891906103f4565b9050610205856014610545565b94506000878688610217826004610545565b92610224939291906104e2565b61022d91610581565b9050600088878961024261ffff881683610545565b9261024f939291906104e2565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293506001925061028f915050565b50600060405160008187856000895af191506102b1905061ffff861689610545565b9750806102d657604051630f85257d60e11b815260ff87166004820152602401610150565b505050505080806102e6906105b1565b915050610187565b5083836040516102ff9291906105d0565b604051908190038120907f957ca92aff3a71c8f449700d17d33d67e1587539864b289480233a9b2b79645f90600090a250505050565b6000546001600160a01b031633146100e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461016257600080fd5b60006020828403121561040657600080fd5b8135610411816103df565b9392505050565b60008060006060848603121561042d57600080fd5b8335610438816103df565b925060208401356001600160e01b03198116811461045557600080fd5b91506040840135610465816103df565b809150509250925092565b6000806020838503121561048357600080fd5b823567ffffffffffffffff8082111561049b57600080fd5b818501915085601f8301126104af57600080fd5b8135818111156104be57600080fd5b8660208285010111156104d057600080fd5b60209290920196919550909350505050565b600080858511156104f257600080fd5b838611156104ff57600080fd5b5050820193919092039150565b60006020828403121561051e57600080fd5b813560ff8116811461041157600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156105585761055861052f565b500190565b60006020828403121561056f57600080fd5b813561ffff8116811461041157600080fd5b6001600160e01b031981358181169160048510156105a95780818660040360031b1b83161692505b505092915050565b600060ff821660ff81036105c7576105c761052f565b60010192915050565b818382376000910190815291905056fea26469706673582212200579155b3fcc97742d571707831541dca13747f89bb27d069852b5c8a2c3c3d064736f6c634300080d0033";

type ChainBatchWriteAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainBatchWriteAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainBatchWriteAdapter__factory extends ContractFactory {
  constructor(...args: ChainBatchWriteAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainBatchWriteAdapter> {
    return super.deploy(overrides || {}) as Promise<ChainBatchWriteAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChainBatchWriteAdapter {
    return super.attach(address) as ChainBatchWriteAdapter;
  }
  override connect(signer: Signer): ChainBatchWriteAdapter__factory {
    return super.connect(signer) as ChainBatchWriteAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainBatchWriteAdapterInterface {
    return new utils.Interface(_abi) as ChainBatchWriteAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainBatchWriteAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainBatchWriteAdapter;
  }
}
