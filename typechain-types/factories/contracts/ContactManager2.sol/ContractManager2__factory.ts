/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ContractManager2,
  ContractManager2Interface,
} from "../../../contracts/ContactManager2.sol/ContractManager2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ContractManager2.accessStruct",
        name: "_access",
        type: "tuple",
      },
    ],
    name: "accessUpdatedEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "adminEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAdminAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getAdminContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_functionId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_userWallet",
        type: "address",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_mode",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        internalType: "struct ContractManager2.accessStruct[]",
        name: "_newAccess",
        type: "tuple[]",
      },
    ],
    name: "updateAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d368061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80635e848f3a116100715780635e848f3a14610162578063715018a6146101755780638da5cb5b1461017d57806395648f1b1461018e578063c3a2a93a146101a3578063f2fde38b146101ab57600080fd5b8062ce8e3e146100b857806327369718146100d65780633341693c146100f957806337267bc31461010c5780634138624a146101225780634b0bddd21461014d575b600080fd5b6100c06101be565b6040516100cd9190610a09565b60405180910390f35b6100e96100e4366004610a72565b6101cf565b60405190151581526020016100cd565b6100e9610107366004610aa5565b6101f1565b610114610272565b6040519081526020016100cd565b610135610130366004610ae8565b61027e565b6040516001600160a01b0390911681526020016100cd565b61016061015b366004610b11565b61028b565b005b610160610170366004610b44565b6102fe565b61016061066e565b6000546001600160a01b0316610135565b610196610682565b6040516100cd9190610bb9565b6100c061068e565b6101606101b9366004610a72565b61069a565b60606101ca6005610713565b905090565b6001600160a01b03811660009081526002602052604081205415155b92915050565b600063f2fde38b60e01b6001600160e01b03198416148061022257506338a80c5360e11b6001600160e01b03198416145b1561022f5750600061026b565b6001600160a01b038085166000908152600960209081526040808320938616835292905220610268906001600160e01b03198516610720565b90505b9392505050565b60006101ca6001610738565b60006101eb600183610742565b61029361074e565b80156102aa576102a46001836107a8565b506102b7565b6102b56001836107bd565b505b604080516001600160a01b038416815282151560208201527f6bee1852ac1880c9a13b899eee6eeb36023bb3b07c24dee47daff561c65a85ef910160405180910390a15050565b6000546001600160a01b031633148061031b575061031b336101cf565b61035d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5cd95960921b60448201526064015b60405180910390fd5b60005b60ff81168211156106695782828260ff1681811061038057610380610bf1565b90506080020160600160208101906103989190610c07565b1561052d576103d383838360ff168181106103b5576103b5610bf1565b6103cb9260206080909202019081019150610a72565b6003906107a8565b5061040c83838360ff168181106103ec576103ec610bf1565b90506080020160400160208101906104049190610a72565b6005906107a8565b5061044f83838360ff1681811061042557610425610bf1565b905060800201602001602081019061043d9190610c22565b6007906001600160e01b0319166107d2565b5061052783838360ff1681811061046857610468610bf1565b90506080020160200160208101906104809190610c22565b6001600160e01b03191660096000868660ff87168181106104a3576104a3610bf1565b6104b99260206080909202019081019150610a72565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868660ff168181106104f0576104f0610bf1565b90506080020160400160208101906105089190610a72565b6001600160a01b031681526020810191909152604001600020906107d2565b50610606565b61060483838360ff1681811061054557610545610bf1565b905060800201602001602081019061055d9190610c22565b6001600160e01b03191660096000868660ff871681811061058057610580610bf1565b6105969260206080909202019081019150610a72565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868660ff168181106105cd576105cd610bf1565b90506080020160400160208101906105e59190610a72565b6001600160a01b031681526020810191909152604001600020906107de565b505b7f991989dc2dea5933f06c7bbc85252ed30a279fc6a82e6259a9c52aedbbe0de8f83838360ff1681811061063c5761063c610bf1565b90506080020160405161064f9190610c3d565b60405180910390a18061066181610cb4565b915050610360565b505050565b61067661074e565b61068060006107ea565b565b60606101ca600761083a565b60606101ca6003610713565b6106a261074e565b6001600160a01b0381166107075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610354565b610710816107ea565b50565b6060600061026b83610841565b6000818152600183016020526040812054151561026b565b60006101eb825490565b600061026b838361089d565b6000546001600160a01b031633146106805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610354565b600061026b836001600160a01b0384166108c7565b600061026b836001600160a01b038416610916565b600061026b83836108c7565b600061026b8383610916565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606101eb825b60608160000180548060200260200160405190810160405280929190818152602001828054801561089157602002820191906000526020600020905b81548152602001906001019080831161087d575b50505050509050919050565b60008260000182815481106108b4576108b4610bf1565b9060005260206000200154905092915050565b600081815260018301602052604081205461090e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101eb565b5060006101eb565b600081815260018301602052604081205480156109ff57600061093a600183610cd3565b855490915060009061094e90600190610cd3565b90508181146109b357600086600001828154811061096e5761096e610bf1565b906000526020600020015490508087600001848154811061099157610991610bf1565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806109c4576109c4610cea565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101eb565b60009150506101eb565b6020808252825182820181905260009190848201906040850190845b81811015610a4a5783516001600160a01b031683529284019291840191600101610a25565b50909695505050505050565b80356001600160a01b0381168114610a6d57600080fd5b919050565b600060208284031215610a8457600080fd5b61026b82610a56565b80356001600160e01b031981168114610a6d57600080fd5b600080600060608486031215610aba57600080fd5b610ac384610a56565b9250610ad160208501610a8d565b9150610adf60408501610a56565b90509250925092565b600060208284031215610afa57600080fd5b5035919050565b80358015158114610a6d57600080fd5b60008060408385031215610b2457600080fd5b610b2d83610a56565b9150610b3b60208401610b01565b90509250929050565b60008060208385031215610b5757600080fd5b823567ffffffffffffffff80821115610b6f57600080fd5b818501915085601f830112610b8357600080fd5b813581811115610b9257600080fd5b8660208260071b8501011115610ba757600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015610a4a57835183529284019291840191600101610bd5565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610c1957600080fd5b61026b82610b01565b600060208284031215610c3457600080fd5b61026b82610a8d565b608081016001600160a01b0380610c5385610a56565b1683526001600160e01b0319610c6b60208601610a8d565b16602084015280610c7e60408601610a56565b16604084015250610c9160608401610b01565b1515606083015292915050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610cca57610cca610c9e565b60010192915050565b600082821015610ce557610ce5610c9e565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220581f061718bf557ae4927afe8c8b6d36deb9660bb5040b86dbdcbe1f447c43eb64736f6c634300080d0033";

type ContractManager2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManager2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager2__factory extends ContractFactory {
  constructor(...args: ContractManager2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager2> {
    return super.deploy(overrides || {}) as Promise<ContractManager2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager2 {
    return super.attach(address) as ContractManager2;
  }
  override connect(signer: Signer): ContractManager2__factory {
    return super.connect(signer) as ContractManager2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManager2Interface {
    return new utils.Interface(_abi) as ContractManager2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager2 {
    return new Contract(address, _abi, signerOrProvider) as ContractManager2;
  }
}
