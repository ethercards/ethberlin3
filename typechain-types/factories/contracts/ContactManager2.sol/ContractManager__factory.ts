/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../../contracts/ContactManager2.sol/ContractManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ContractManager.accessStruct",
        name: "_access",
        type: "tuple",
      },
    ],
    name: "accessUpdatedEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "mode",
        type: "bool",
      },
    ],
    name: "adminEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAdminAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getAdminContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFunctions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_functionId",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_userWallet",
        type: "address",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_mode",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "functionId",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "userWallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
        ],
        internalType: "struct ContractManager.accessStruct[]",
        name: "_newAccess",
        type: "tuple[]",
      },
    ],
    name: "updateAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610eba8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80635e848f3a116100715780635e848f3a14610162578063715018a6146101755780638da5cb5b1461017d57806395648f1b1461018e578063c3a2a93a146101a3578063f2fde38b146101ab57600080fd5b8062ce8e3e146100b857806327369718146100d65780633341693c146100f957806337267bc31461010c5780634138624a146101225780634b0bddd21461014d575b600080fd5b6100c06101be565b6040516100cd9190610b33565b60405180910390f35b6100e96100e4366004610b9c565b610283565b60405190151581526020016100cd565b6100e9610107366004610bcf565b610296565b6101146102d9565b6040519081526020016100cd565b610135610130366004610c12565b6102ea565b6040516001600160a01b0390911681526020016100cd565b61016061015b366004610c3b565b6102f7565b005b610160610170366004610c6e565b61036a565b61016061067b565b6000546001600160a01b0316610135565b61019661068f565b6040516100cd9190610ce3565b6100c0610740565b6101606101b9366004610b9c565b6107fe565b606060006101cc600561087c565b905060008167ffffffffffffffff8111156101e9576101e9610d1b565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b50905060015b828161ffff161161027c5761023260058261ffff16610886565b8261023e600184610d47565b61ffff168151811061025257610252610d6a565b6001600160a01b03909216602092830291909101909101528061027481610d80565b915050610218565b5092915050565b6000610290600183610899565b92915050565b6001600160a01b03808416600090815260096020908152604080832093851683529290529081206102d1906001600160e01b031985166108bb565b949350505050565b60006102e5600161087c565b905090565b6000610290600183610886565b6102ff6108d3565b80156103165761031060018361092d565b50610323565b610321600183610942565b505b604080516001600160a01b038416815282151560208201527f6bee1852ac1880c9a13b899eee6eeb36023bb3b07c24dee47daff561c65a85ef910160405180910390a15050565b60005b60ff81168211156106765782828260ff1681811061038d5761038d610d6a565b90506080020160600160208101906103a59190610da1565b1561053a576103e083838360ff168181106103c2576103c2610d6a565b6103d89260206080909202019081019150610b9c565b60039061092d565b5061041983838360ff168181106103f9576103f9610d6a565b90506080020160400160208101906104119190610b9c565b60059061092d565b5061045c83838360ff1681811061043257610432610d6a565b905060800201602001602081019061044a9190610dbc565b6007906001600160e01b031916610957565b5061053483838360ff1681811061047557610475610d6a565b905060800201602001602081019061048d9190610dbc565b6001600160e01b03191660096000868660ff87168181106104b0576104b0610d6a565b6104c69260206080909202019081019150610b9c565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868660ff168181106104fd576104fd610d6a565b90506080020160400160208101906105159190610b9c565b6001600160a01b03168152602081019190915260400160002090610957565b50610613565b61061183838360ff1681811061055257610552610d6a565b905060800201602001602081019061056a9190610dbc565b6001600160e01b03191660096000868660ff871681811061058d5761058d610d6a565b6105a39260206080909202019081019150610b9c565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868660ff168181106105da576105da610d6a565b90506080020160400160208101906105f29190610b9c565b6001600160a01b03168152602081019190915260400160002090610963565b505b7f991989dc2dea5933f06c7bbc85252ed30a279fc6a82e6259a9c52aedbbe0de8f83838360ff1681811061064957610649610d6a565b90506080020160405161065c9190610dd7565b60405180910390a18061066e81610e38565b91505061036d565b505050565b6106836108d3565b61068d600061096f565b565b6060600061069d600761087c565b905060008167ffffffffffffffff8111156106ba576106ba610d1b565b6040519080825280602002602001820160405280156106e3578160200160208202803683370190505b50905060015b828161ffff161161027c5761070360078261ffff166109bf565b8261070f600184610d47565b61ffff168151811061072357610723610d6a565b60209081029190910101528061073881610d80565b9150506106e9565b6060600061074e600361087c565b905060008167ffffffffffffffff81111561076b5761076b610d1b565b604051908082528060200260200182016040528015610794578160200160208202803683370190505b50905060015b828161ffff161161027c576107b460038261ffff16610886565b826107c0600184610d47565b61ffff16815181106107d4576107d4610d6a565b6001600160a01b0390921660209283029190910190910152806107f681610d80565b91505061079a565b6108066108d3565b6001600160a01b0381166108705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6108798161096f565b50565b6000610290825490565b600061089283836109c7565b9392505050565b6001600160a01b03811660009081526001830160205260408120541515610892565b60008181526001830160205260408120541515610892565b6000546001600160a01b0316331461068d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610867565b6000610892836001600160a01b0384166109f1565b6000610892836001600160a01b038416610a40565b600061089283836109f1565b60006108928383610a40565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061089283835b60008260000182815481106109de576109de610d6a565b9060005260206000200154905092915050565b6000818152600183016020526040812054610a3857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610290565b506000610290565b60008181526001830160205260408120548015610b29576000610a64600183610e57565b8554909150600090610a7890600190610e57565b9050818114610add576000866000018281548110610a9857610a98610d6a565b9060005260206000200154905080876000018481548110610abb57610abb610d6a565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610aee57610aee610e6e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610290565b6000915050610290565b6020808252825182820181905260009190848201906040850190845b81811015610b745783516001600160a01b031683529284019291840191600101610b4f565b50909695505050505050565b80356001600160a01b0381168114610b9757600080fd5b919050565b600060208284031215610bae57600080fd5b61089282610b80565b80356001600160e01b031981168114610b9757600080fd5b600080600060608486031215610be457600080fd5b610bed84610b80565b9250610bfb60208501610bb7565b9150610c0960408501610b80565b90509250925092565b600060208284031215610c2457600080fd5b5035919050565b80358015158114610b9757600080fd5b60008060408385031215610c4e57600080fd5b610c5783610b80565b9150610c6560208401610c2b565b90509250929050565b60008060208385031215610c8157600080fd5b823567ffffffffffffffff80821115610c9957600080fd5b818501915085601f830112610cad57600080fd5b813581811115610cbc57600080fd5b8660208260071b8501011115610cd157600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015610b7457835183529284019291840191600101610cff565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff83811690831681811015610d6257610d62610d31565b039392505050565b634e487b7160e01b600052603260045260246000fd5b600061ffff808316818103610d9757610d97610d31565b6001019392505050565b600060208284031215610db357600080fd5b61089282610c2b565b600060208284031215610dce57600080fd5b61089282610bb7565b608081016001600160a01b0380610ded85610b80565b1683526001600160e01b0319610e0560208601610bb7565b16602084015280610e1860408601610b80565b16604084015250610e2b60608401610c2b565b1515606083015292915050565b600060ff821660ff8103610e4e57610e4e610d31565b60010192915050565b600082821015610e6957610e69610d31565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d2497066a119ada7068a7b51dafc79899b93b692873d3700f0318633437cc9c064736f6c634300080d0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
