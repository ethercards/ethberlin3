/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../../contracts/ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "id",
        type: "uint16",
      },
    ],
    name: "RequestFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "RequestCompelted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytesData",
        type: "bytes",
      },
    ],
    name: "batchCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAdress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_fnHash",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_functionCaller",
        type: "address",
      },
    ],
    name: "checkAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109798061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063f2fde38b14610086578063f3b5c85c14610099578063fc6837a1146100bc575b600080fd5b6100646100cf565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100646100943660046106c1565b6100e3565b6100ac6100a73660046106e3565b610161565b604051901515815260200161007d565b6100646100ca366004610735565b610192565b6100d76103f8565b6100e16000610452565b565b6100eb6103f8565b6001600160a01b0381166101555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61015e81610452565b50565b60006101886040518060400160405280600481526020016315195cdd60e21b8152506104a2565b5060019392505050565b6040805180820190915260118152700313cba32b9903230ba309039b4bd329d1607d1b60208201526101c490826104e5565b6040805180820190915260078152662827a4a72a22a960c91b60208201526002906101ef90826104e5565b60006101fd828285876107a7565b610206916107d1565b60f01c90506102148161052e565b60005b8161ffff168161ffff1610156103b1576000858486610237826002610817565b92610244939291906107a7565b61024d916107d1565b60f01c905061025b8161052e565b610266846002610817565b93506000868587610278826014610817565b92610285939291906107a7565b61028e9161082f565b60601c905061029c81610573565b6102a7856014610817565b945060008786886102b9826004610817565b926102c6939291906107a7565b6102cf91610862565b90506102da816105bb565b60008887896102ed61ffff881683610817565b926102fa939291906107a7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092935061033d92508391506106049050565b610348838333610161565b50600060405160008187856000895af1915061036a905061ffff861689610817565b975061037581610647565b8061039957604051637a2da17d60e01b815261ffff8716600482015260240161014c565b505050505080806103a990610890565b915050610217565b5083836040516103c29291906108b1565b604051908190038120907f957ca92aff3a71c8f449700d17d33d67e1587539864b289480233a9b2b79645f90600090a250505050565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161014c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61015e816040516024016104b6919061090e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610684565b61052a82826040516024016104fb929190610921565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610684565b5050565b61015e8160405160240161054491815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052610684565b6040516001600160a01b038216602482015261015e9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610684565b6040516001600160e01b03198216602482015261015e9060440160408051601f198184030181529190526020810180516001600160e01b031663e05f48d160e01b179052610684565b61015e81604051602401610618919061090e565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052610684565b604051811515602482015261015e9060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b03811681146106bc57600080fd5b919050565b6000602082840312156106d357600080fd5b6106dc826106a5565b9392505050565b6000806000606084860312156106f857600080fd5b610701846106a5565b925060208401356001600160e01b03198116811461071e57600080fd5b915061072c604085016106a5565b90509250925092565b6000806020838503121561074857600080fd5b823567ffffffffffffffff8082111561076057600080fd5b818501915085601f83011261077457600080fd5b81358181111561078357600080fd5b86602082850101111561079557600080fd5b60209290920196919550909350505050565b600080858511156107b757600080fd5b838611156107c457600080fd5b5050820193919092039150565b6001600160f01b031981358181169160028510156107f95780818660020360031b1b83161692505b505092915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561082a5761082a610801565b500190565b6bffffffffffffffffffffffff1981358181169160148510156107f95760149490940360031b84901b1690921692915050565b6001600160e01b031981358181169160048510156107f95760049490940360031b84901b1690921692915050565b600061ffff8083168181036108a7576108a7610801565b6001019392505050565b8183823760009101908152919050565b6000815180845260005b818110156108e7576020818501810151868301820152016108cb565b818111156108f9576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006106dc60208301846108c1565b60408152600061093460408301856108c1565b9050826020830152939250505056fea2646970667358221220452062143dd6d58b9093486fa9cfb2568160c39bf7279916b81a3be59398628b64736f6c634300080d0033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  override connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
